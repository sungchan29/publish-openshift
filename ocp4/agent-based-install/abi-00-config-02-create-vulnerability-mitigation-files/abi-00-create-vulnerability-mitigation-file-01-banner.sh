#!/bin/bash

# Enable strict mode
set -euo pipefail

### Source the configuration file and validate its existence
config_file="$(dirname "$(realpath "$0")")/../abi-00-config-setup.sh"
if [[ ! -f "$config_file" ]]; then
    echo "[ERROR] Cannot access '$config_file'. File or directory does not exist. Exiting..."
    exit 1
fi
if ! source "$config_file"; then
    echo "[ERROR] Failed to source '$config_file'. Check file syntax or permissions. Exiting..."
    exit 1
fi

butane_ocp_version="$(echo "$OCP_VERSION" | awk '{print $NF}' | sed 's/\.[0-9]*$/\.0/')"

### Create custom banner file
cat <<EOF > "$VULNERABILITY_MITIGATION_DIR/custom-banner.txt"
*************************************************************************
*   This is a private computer facility.                                *
*************************************************************************
EOF
if [[ ! -f "$VULNERABILITY_MITIGATION_DIR/custom-banner.txt" ]]; then
    echo "[ERROR] Failed to create custom-banner.txt in '$VULNERABILITY_MITIGATION_DIR'. Exiting..."
    exit 1
fi

### Generate Butane configurations for master and worker roles
for role in "master" "worker"; do
    cat <<EOF > "$BUTANE_BU_DIR/99-${role}-vulnerability-mitigation-banner.bu"
variant: openshift
version: $butane_ocp_version
metadata:
  name: 99-${role}-vulnerability-mitigation-banner
  labels:
    machineconfiguration.openshift.io/role: ${role}
storage:
  files:
  - path: /etc/motd
    mode: 0644
    overwrite: true
    contents:
      source: data:text/plain;charset=utf-8;base64,$(base64 -w0 "$VULNERABILITY_MITIGATION_DIR/custom-banner.txt")
EOF
    if [[ ! -f "$BUTANE_BU_DIR/99-${role}-vulnerability-mitigation-banner.bu" ]]; then
        echo "[ERROR] Failed to create Butane configuration for role '$role'. Exiting..."
        exit 1
    fi

    ./butane "$BUTANE_BU_DIR/99-${role}-vulnerability-mitigation-banner.bu" -o "$ADDITIONAL_MANIFEST/99-${role}-vulnerability-mitigation-banner.yaml"
done

if [[ $? -eq 0 ]]; then
    echo "[INFO] Successfully executed : $(dirname "$(realpath "$0")")/$(basename "$0")"
else
    echo "[ERROR] Failed to patch MachineConfig(vulnerability-mitigation-banner)."
fi