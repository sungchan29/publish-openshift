#!/bin/bash

### ---------------------------------------------------------------------------------
### Configure File Permissions for Vulnerability Mitigation
### ---------------------------------------------------------------------------------
### This script creates a MachineConfig to set strict permissions on sensitive files
### on all cluster nodes as a security best practice.

### Enable strict mode to exit immediately if a command fails, an undefined variable is used, or a command in a pipeline fails.
set -euo pipefail

### ---------------------------------------------------------------------------------
### Load Configuration and Prerequisites
### ---------------------------------------------------------------------------------
### Source the configuration file to load all necessary variables.
config_file="$(dirname "$(realpath "$0")")/../abi-00-config-setup.sh"
if [[ ! -f "$config_file" ]]; then
    echo "ERROR: The configuration file '$config_file' does not exist. Exiting." >&2
    exit 1
fi
if ! source "$config_file"; then
    echo "ERROR: Failed to source '$config_file'. Check file syntax or permissions." >&2
    exit 1
fi

butane_ocp_version="$(echo "$OCP_VERSION" | awk '{print $NF}' | sed 's/\.[0-9]*$/\.0/')"

### ---------------------------------------------------------------------------------
### Generate File Permission Configuration
### ---------------------------------------------------------------------------------
### Create a temporary file with the list of files to be modified.
echo "INFO: Generating list of files for permission changes..."
cat <<EOF > "$VULNERABILITY_MITIGATION_DIR/chmod-o-r-files.txt"
/root/.bashrc
/root/.bash_profile
/root/.bash_logout
/var/home/core/.bashrc
/var/home/core/.bash_profile
/var/home/core/.bash_logout
EOF

### Check if the file list exists and is not empty.
if [[ -f "$VULNERABILITY_MITIGATION_DIR/chmod-o-r-files.txt" ]] && [[ -s "$VULNERABILITY_MITIGATION_DIR/chmod-o-r-files.txt" ]]; then
    echo "INFO: File list found. Generating MachineConfig to apply permissions."
    
    ### Read and format the list of files into a single, space-separated string.
    chmod_files=$(cat "$VULNERABILITY_MITIGATION_DIR/chmod-o-r-files.txt" | sed 's/^ *//;s/ *$//' | tr '\n' ' ' | sed 's/ *$//')

    ### Loop through master and worker roles to create a MachineConfig for each.
    for role in "master" "worker"; do
        echo "INFO: -> Creating Butane config for '$role' nodes."
        cat <<EOF > "$BUTANE_BU_DIR/99-${role}-vulnerability-mitigation-chmod-o-r-files.bu"
variant: openshift
version: $butane_ocp_version
metadata:
  name: 99-${role}-vulnerability-mitigation-chmod-o-r-files
  labels:
    machineconfiguration.openshift.io/role: ${role}
systemd:
  units:
  - contents: |
      [Unit]
      Description=chmod files
      Before=kubelet.service

      [Service]
      Type=oneshot
      ExecStart=/bin/bash -c '/usr/bin/chmod o-r ${chmod_files}'
      RemainAfterExit=true

      [Install]
      WantedBy=multi-user.target
    enabled: true
    name: chmod-o-r-files.service
EOF
        
        ### Transpile the Butane file into a MachineConfig YAML file.
        if [[ -f "$BUTANE_BU_DIR/99-${role}-vulnerability-mitigation-chmod-o-r-files.bu" ]]; then
            echo "INFO: -> Transpiling Butane file to MachineConfig for '$role' nodes."
            ./butane "$BUTANE_BU_DIR/99-${role}-vulnerability-mitigation-chmod-o-r-files.bu" -o "$ADDITIONAL_MANIFEST/99-${role}-vulnerability-mitigation-chmod-o-r-files.yaml"
            echo "INFO: -> Successfully created MachineConfig for '$role' nodes."
        else
            echo "ERROR: Failed to create Butane configuration for role '$role'." >&2
            exit 1
        fi
    done
    echo "--- File permissions configuration is complete. The MachineConfigs are ready for the installer."
else
    echo "INFO: Skipping file permissions configuration. The list of files was not created or is empty."
    echo "--- Script execution finished without making changes."
fi