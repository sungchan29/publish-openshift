#!/bin/bash

### ---------------------------------------------------------------------------------
### Configure File Permissions for Vulnerability Mitigation
### ---------------------------------------------------------------------------------
### This script generates a MachineConfig manifest to set strict file permissions on
### sensitive system files for all nodes in the OpenShift cluster, enhancing security.

### Enable strict mode for safer script execution.
set -euo pipefail

### ---------------------------------------------------------------------------------
### Load Configuration and Prerequisites
### ---------------------------------------------------------------------------------
### Source the configuration script.
config_file="$(dirname "$(realpath "$0")")/../abi-00-config-setup.sh"
if [[ ! -f "$config_file" ]]; then
    printf "%-12s%-80s\n" "[ERROR]" "Configuration file '$config_file' not found. Exiting..."
    exit 1
fi
source "$config_file"

### Set the Butane specification version based on the OCP version (e.g., 4.19.9 -> 4.19.0).
butane_ocp_version="$(echo "$OCP_VERSION" | awk '{print $NF}' | sed 's/\.[0-9]*$/\.0/')"

### ---------------------------------------------------------------------------------
### Generate File Permission Configuration
### ---------------------------------------------------------------------------------
printf "%-12s%-80s\n" "[INFO]" "Generating MachineConfig to harden file permissions..."
printf "%-12s%-80s\n" "[INFO]" "-- Creating a list of system files to restrict permissions..."
### Create a temporary file containing the list of files to modify.
cat <<EOF > "$VULNERABILITY_MITIGATION_DIR/chmod-o-r-files.txt"
/root/.bashrc
/root/.bash_profile
/root/.bash_logout
/var/home/core/.bashrc
/var/home/core/.bash_profile
/var/home/core/.bash_logout
EOF
### Check if the file list exists and is not empty before proceeding.
if [[ -f "$VULNERABILITY_MITIGATION_DIR/chmod-o-r-files.txt" ]] && [[ -s "$VULNERABILITY_MITIGATION_DIR/chmod-o-r-files.txt" ]]; then
    ### Read the file list and format it into a single, space-separated string for use in the command.
    chmod_files=$(cat "$VULNERABILITY_MITIGATION_DIR/chmod-o-r-files.txt" | sed 's/^ *//;s/ *$//' | tr '\n' ' ' | sed 's/ *$//')

    ### Loop through master and worker roles to create a separate MachineConfig for each.
    for role in "master" "worker"; do
        printf "%-12s%-80s\n" "[INFO]" "-- Creating Butane config for '$role' nodes..."
        cat <<EOF > "$BUTANE_BU_DIR/99-${role}-vulnerability-mitigation-chmod-o-r-files.bu"
variant: openshift
version: $butane_ocp_version
metadata:
  name: 99-${role}-vulnerability-mitigation-chmod-o-r-files
  labels:
    machineconfiguration.openshift.io/role: ${role}
systemd:
  units:
  - contents: |
      [Unit]
      Description=Remove read permissions for 'others' on sensitive files
      Before=kubelet.service

      [Service]
      Type=oneshot
      ExecStart=/bin/bash -c '/usr/bin/chmod o-r ${chmod_files}'
      RemainAfterExit=true

      [Install]
      WantedBy=multi-user.target
    enabled: true
    name: chmod-o-r-files.service
EOF
        ### Transpile the Butane file into a MachineConfig YAML file.
        if [[ -f "$BUTANE_BU_DIR/99-${role}-vulnerability-mitigation-chmod-o-r-files.bu" ]]; then
            printf "%-12s%-80s\n" "[INFO]" "-- Transpiling Butane file to MachineConfig for '$role' nodes..."
            ./butane "$BUTANE_BU_DIR/99-${role}-vulnerability-mitigation-chmod-o-r-files.bu" -o "$ADDITIONAL_MANIFEST/99-${role}-vulnerability-mitigation-chmod-o-r-files.yaml"
        else
            printf "%-12s%-80s\n" "[ERROR]" "Failed to create Butane configuration file for role '$role'."
        fi
    done
else
    printf "%-12s%-80s\n" "[INFO]" "Skipping file permissions configuration. Reason: Temporary file list is missing or empty."
fi