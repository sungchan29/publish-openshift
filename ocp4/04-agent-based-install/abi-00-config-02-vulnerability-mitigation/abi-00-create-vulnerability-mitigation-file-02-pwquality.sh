#!/bin/bash

### ---------------------------------------------------------------------------------
### Configure Password Quality (pwquality)
### ---------------------------------------------------------------------------------
### This script generates a MachineConfig manifest to enforce a strong password
### policy on all cluster nodes, which is a critical vulnerability mitigation step.

### Enable strict mode for safer script execution.
set -euo pipefail

### ---------------------------------------------------------------------------------
### Load Configuration and Prerequisites
### ---------------------------------------------------------------------------------
### Source the configuration script.
config_file="$(dirname "$(realpath "$0")")/../abi-00-config-setup.sh"
if [[ ! -f "$config_file" ]]; then
    printf "%-12s%-80s\n" "[ERROR]" "Configuration file '$config_file' not found. Exiting..."
    exit 1
fi
source "$config_file"

### Set the Butane specification version based on the OCP version (e.g., 4.19.9 -> 4.19.0).
butane_ocp_version="$(echo "$OCP_VERSION" | awk '{print $NF}' | sed 's/\.[0-9]*$/\.0/')"

### ---------------------------------------------------------------------------------
### Generate pwquality Configuration
### ---------------------------------------------------------------------------------
printf "%-12s%-80s\n" "[INFO]" "Generating MachineConfig for password policy..."
### Create a temporary file containing the password quality settings.
printf "%-12s%-80s\n" "[INFO]" "-- Generating temporary password quality configuration file..."
cat <<EOF > "$VULNERABILITY_MITIGATION_DIR/pwquality.txt"
dcredit = -1
ucredit = -1
lcredit = -1
ocredit = -1
minlen = 8
retry = 3
EOF
### Check if the pwquality configuration file exists and is not empty before proceeding.
if [[ -f "$VULNERABILITY_MITIGATION_DIR/pwquality.txt" ]] && [[ -s "$VULNERABILITY_MITIGATION_DIR/pwquality.txt" ]]; then
    ### Loop through master and worker roles to create a separate MachineConfig for each.
    for role in "master" "worker"; do
        printf "%-12s%-80s\n" "[INFO]" "-- Creating Butane config for '$role' nodes..."
        cat <<EOF > "$BUTANE_BU_DIR/99-${role}-vulnerability-mitigation-pwquality.bu"
variant: openshift
version: $butane_ocp_version
metadata:
  name: 99-${role}-vulnerability-mitigation-pwquality
  labels:
    machineconfiguration.openshift.io/role: ${role}
storage:
  files:
  - path: /etc/security/pwquality.conf.d/99-pwquality.conf
    mode: 0644
    overwrite: true
    contents:
      source: data:text/plain;charset=utf-8;base64,$(base64 -w0 "$VULNERABILITY_MITIGATION_DIR/pwquality.txt")
EOF
        ### Transpile the Butane file into a MachineConfig YAML file.
        if [[ -f "$BUTANE_BU_DIR/99-${role}-vulnerability-mitigation-pwquality.bu" ]]; then
            printf "%-12s%-80s\n" "[INFO]" "-- Transpiling Butane file to MachineConfig for '$role' nodes..."
            ./butane "$BUTANE_BU_DIR/99-${role}-vulnerability-mitigation-pwquality.bu" -o "$ADDITIONAL_MANIFEST/99-${role}-vulnerability-mitigation-pwquality.yaml"
        else
            printf "%-12s%-80s\n" "[ERROR]" "Failed to create Butane configuration file for role '$role'."
            exit 1
        fi
    done
else
    printf "%-12s%-80s\n" "[INFO]" "Skipping pwquality MachineConfig creation. Reason: Temporary config file is missing or empty."
fi